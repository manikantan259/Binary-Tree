    // Function to store the zig zag order traversal of tree in a list.
    ArrayList<Integer> zigZagTraversal(Node root) {
        // Add your code here.
        ArrayList<Integer> result = new ArrayList<>();
        if (root == null) return result;
        
        
        Queue <Node> queue = new LinkedList<>();
        queue.offer(root);
        boolean leftToRight = true;
        
        while ( !queue.isEmpty()){
            int levelSize = queue.size();
            LinkedList<Integer> levelList = new LinkedList<>();
            
            for (int i =0 ; i < levelSize ; i++){
                
                  Node curr = queue.poll();
                  
                  if (leftToRight){
                      levelList.addLast(curr.data);
                      
                  }else {
                    levelList.addFirst(curr.data); // Add to front for right-to-left
                }
                
                
                if (curr.left != null) queue.add(curr.left);
                if (curr.right != null) queue.add(curr.right);
            }
            result.addAll(levelList);
            leftToRight = !leftToRight;
            
            
            
        }
        return result;
        
    }
}