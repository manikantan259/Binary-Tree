/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        

        if (subRoot == null) return true;
        if (root == null) return false;

        if (isSameTree(root , subRoot)){
            return true;
        }

        boolean left = isSubtree(root.left , subRoot);
        boolean right = isSubtree(root.right , subRoot);

        return left || right;
    }

    public boolean isSameTree(TreeNode p , TreeNode q){

        if ( p ==  null && q == null) return true;

        if (p != null && q != null && p.val == q.val){

            boolean left = isSameTree(p.left ,q.left);
            boolean right = isSameTree(p.right, q.right);
            return  left && right;
        }else{
            return false;
        }
    }
}